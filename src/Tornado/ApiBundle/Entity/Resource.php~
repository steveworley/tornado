<?php

namespace Tornado\ApiBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Resource
 */
class Resource
{
    /**
     * @var integer
     */
    private $id;

    /**
     * @var string
     */
    private $hash;

    /**
     * @var string
     */
    private $output;

    /**
     * @var \DateTime
     */
    private $created;

    /**
     * @var path
     */
    private $path;

    /**
     * @Assert\File(maxSize="6000000")
     */
    private $file;

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set hash
     *
     * @param string $hash
     * @return Resource
     */
    public function setHash($hash)
    {
        $this->hash = $hash;

        return $this;
    }

    /**
     * Get hash
     *
     * @return string
     */
    public function getHash()
    {
        return $this->hash;
    }

    /**
     * Set output
     *
     * @param string $output
     * @return Resource
     */
    public function setOutput($output)
    {
        $this->output = $output;

        return $this;
    }

    /**
     * Get output
     *
     * @return string
     */
    public function getOutput()
    {
        return $this->output;
    }

    /**
     * Set created
     *
     * @param \DateTime $created
     * @return Resource
     */
    public function setCreated($created)
    {
        $this->created = $created;

        return $this;
    }

    /**
     * Get created
     *
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * Get path
     *
     * @return string;
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * Set path
     *
     * @param string path
     * @return Resource
     */
    public function setPath($path)
    {
        $this->path = $path;

        return $this;
    }

    public function setFile(UploadedFile $file = null)
    {
        $this->file = $file;
    }

    public function getFile()
    {
        return $this->file;
    }

    /**
     * Get \AbsolutePath
     *
     * @return string
     */
    public function getAbsolutePath()
    {
        return NULL === $this->path
            ? NULL
            : $this->getUploadDir() . '/' . $this->path;
    }

    /**
     * Get \WebPath
     *
     * @return string
     */
    public function getWebPath()
    {
        return NULL === $this->path
            ? NULL
            : $this->getUploadDir() . '/' . $this->path;
    }

    /**
     * Get \UploadRootDir
     *
     * @return string
     */
    private function getUploadRootDir()
    {
        return __DIR__ . '/../../../../web/' . $this->getUploadDir();
    }

    /**
     * Get \UploadDir
     *
     * @return string
     */
    private function getUploadDir()
    {
        return 'uploads/resources';
    }

    /**
     * Upload a file to the server.
     *
     * @return null
     */
    public function upload()
    {
        if (null === $this->getFile()) {
            return;
        }

        $this->getFile()->move(
            $this->getUploadRootDir(),
            $this->getFile()->getClientOriginalName()
        );

        $this->path = $this->getFile()->getClientOriginalName();
        $this->file = null;
    }
}
